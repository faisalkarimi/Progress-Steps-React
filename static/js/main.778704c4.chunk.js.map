{"version":3,"sources":["components/ProgressSteps.js","App.js","reportWebVitals.js","index.js"],"names":["ProgressSteps","useState","barWidth","setBarWidth","currentStep","setCurrentStep","useEffect","className","style","width","disabled","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkDeA,EA/CO,WAClB,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAuBA,OAJAC,qBAAU,WACNH,GAAaC,EAAY,GAAb,EAAmC,OACjD,CAACA,IAGC,sBAAKG,UAAU,YAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,eAAeC,MAAO,CAACC,MAAOP,EAAS,OACtD,qBAAKK,UAAU,gBAAf,eACA,qBAAKA,UAAS,iBAAYH,GAAe,EAAI,SAAU,IAAvD,eACA,qBAAKG,UAAS,iBAAYH,GAAe,EAAI,SAAU,IAAvD,eACA,qBAAKG,UAAS,iBAAYH,GAAe,EAAI,SAAU,IAAvD,eACA,qBAAKG,UAAS,iBAAYH,GAAe,EAAI,SAAU,IAAvD,kBAEJ,sBAAKG,UAAU,gBAAf,UACI,wBAAQA,UAAU,eACjBG,SAA0B,IAAhBN,EACVO,QAzBS,WAEdN,EADAD,EAAc,EACCA,EAAc,EAEd,IAmBX,kBAGA,wBAAQG,UAAU,eACjBG,SAAUN,GArCJ,EAsCNO,QApCS,WAEdN,EADAD,EAHW,EAIIA,EAAc,EAJlB,IAoCP,yBC7BDQ,MAVf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.778704c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './style.css'\n\nconst ProgressSteps = () => {\n    const [barWidth, setBarWidth] = useState(0)\n    const [currentStep, setCurrentStep] = useState(1);\n    const totalSteps = 5;\n\n    const handleNextBtn = () => {\n        if (currentStep < totalSteps) {\n            setCurrentStep(currentStep + 1);\n        }else{\n            setCurrentStep(totalSteps);\n        }\n    }\n\n    const handlePrevBtn = () => {\n        if (currentStep > 1) {\n            setCurrentStep(currentStep - 1);\n        }else{\n            setCurrentStep(1);\n        }\n    }\n\n    useEffect(() => {\n        setBarWidth((currentStep-1) / (totalSteps-1) * 100);\n    },[currentStep]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"progress-container\">\n                <div className=\"progress-bar\" style={{width: barWidth+'%'}}></div>\n                <div className=\"circle active\">1</div>\n                <div className={`circle ${currentStep >= 2 ? \"active\": \"\"}`}>2</div>\n                <div className={`circle ${currentStep >= 3 ? \"active\": \"\"}`}>3</div>\n                <div className={`circle ${currentStep >= 4 ? \"active\": \"\"}`}>4</div>\n                <div className={`circle ${currentStep >= 5 ? \"active\": \"\"}`}>5</div>\n            </div>\n            <div className=\"btn-container\">\n                <button className=\"btn btn-prev\"\n                 disabled={currentStep === 1 ? true : false}\n                 onClick={handlePrevBtn}>Prev</button>\n                <button className=\"btn btn-next\"\n                 disabled={currentStep >= totalSteps ? true : false}\n                 onClick={handleNextBtn}>Next</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProgressSteps\n","import './App.css';\nimport ProgressSteps from './components/ProgressSteps';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ProgressSteps />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}